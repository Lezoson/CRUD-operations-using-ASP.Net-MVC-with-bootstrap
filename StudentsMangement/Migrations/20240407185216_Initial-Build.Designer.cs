// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsMangement.Data;

#nullable disable

namespace StudentsMangement.Migrations
{
    [DbContext(typeof(StudentDBContext))]
    [Migration("20240407185216_Initial-Build")]
    partial class InitialBuild
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentsMangement.Models.CourseDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CourseDetails");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentAddress", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLineOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLineTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AddressStudentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("AddressStudentID")
                        .IsUnique();

                    b.ToTable("StudentAddress");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentCourse", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CourseStudentID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId");

                    b.HasIndex("CourseStudentID")
                        .IsUnique();

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentDetails", b =>
                {
                    b.Property<Guid>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("CourseDetailsId");

                    b.ToTable("StudentDetails");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentAddress", b =>
                {
                    b.HasOne("StudentsMangement.Models.StudentDetails", "StudentDetails")
                        .WithOne("StudentAddress")
                        .HasForeignKey("StudentsMangement.Models.StudentAddress", "AddressStudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentDetails");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentCourse", b =>
                {
                    b.HasOne("StudentsMangement.Models.StudentDetails", "StudentDetails")
                        .WithOne("StudentCourse")
                        .HasForeignKey("StudentsMangement.Models.StudentCourse", "CourseStudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentDetails");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentDetails", b =>
                {
                    b.HasOne("StudentsMangement.Models.CourseDetails", "CourseDetails")
                        .WithMany()
                        .HasForeignKey("CourseDetailsId");

                    b.Navigation("CourseDetails");
                });

            modelBuilder.Entity("StudentsMangement.Models.StudentDetails", b =>
                {
                    b.Navigation("StudentAddress");

                    b.Navigation("StudentCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
